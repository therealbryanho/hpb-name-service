{"ast":null,"code":"var _jsxFileName = \"/Users/Bryan/Documents/Development/dns-polygon/front/src/App.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport React, { useState, useEffect } from 'react';\nimport './app.css';\nimport { ethers } from 'ethers';\nimport contractABI from './utils/contractABI.json';\nimport { networks } from './utils/networks';\nimport { useWeb3React } from '@web3-react/core';\nimport RecentlyMinted from './components/RecentlyMinted';\nimport ConnectionStatus from './components/ConnectionStatus';\nimport ConnectButton from './components/ConnectButton';\nimport Avatar from './components/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst tld = '.hpb'; // Constants\n\nconst CONTRACT_ADDRESS = '0x4f088e4aeb62ec260254850be255859d839f77db';\nexport let RecordType;\n\n(function (RecordType) {\n  RecordType[RecordType[\"AVATAR\"] = 0] = \"AVATAR\";\n  RecordType[RecordType[\"TWITTER\"] = 1] = \"TWITTER\";\n  RecordType[RecordType[\"WEBSITE\"] = 2] = \"WEBSITE\";\n  RecordType[RecordType[\"EMAIL\"] = 3] = \"EMAIL\";\n  RecordType[RecordType[\"DESCRIPTION\"] = 4] = \"DESCRIPTION\";\n})(RecordType || (RecordType = {}));\n\nconst App = () => {\n  _s();\n\n  const {\n    activate,\n    active,\n    account,\n    library,\n    chainId\n  } = useWeb3React();\n  const [domain, setDomain] = useState('');\n  const [mintPrice, setMintPrice] = useState(0);\n  const [records, setRecords] = useState(undefined);\n  const [loading, setLoading] = useState(false);\n  const [mints, setMints] = useState([]);\n  useEffect(() => {\n    //@ts-ignore\n    if (networks[chainId === null || chainId === void 0 ? void 0 : chainId.toString(16)] === 'HPB Mainnet') {\n      fetchMints();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [account, chainId]);\n\n  const switchNetwork = async () => {\n    if (account) {\n      try {\n        // Try to switch to the Mumbai testnet\n        await library.send('wallet_switchEthereumChain', [{\n          chainId: '0x13881'\n        }] // Check networks.js for hexadecimal network ids\n        );\n      } catch (error) {\n        // This error code means that the chain we want has not been added to MetaMask\n        // In this case we ask the user to add it to their MetaMask\n        if (error.code === 4902) {\n          try {\n            await library.send('wallet_addEthereumChain', [{\n              chainId: '0x13881',\n              chainName: 'HPB Mainnet',\n              rpcUrls: ['https://hpbnode.com/'],\n              nativeCurrency: {\n                name: 'HPB Mainnet',\n                symbol: 'HPB',\n                decimals: 18\n              },\n              blockExplorerUrls: ['https://hscan.org/']\n            }]);\n          } catch (error) {\n            console.log(error);\n          }\n        }\n\n        console.log(error);\n      }\n    }\n  };\n\n  const updateDomain = async () => {\n    if (!records || !domain) {\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      if (active) {\n        const signer = library.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n        const tx = await contract['setRecords'](domain, records.avatar, records.twitterTag, records.website, records.email, records.description);\n        await tx.wait();\n        console.log('Record set https://hscan.org/tx/' + tx.hash);\n        fetchMints();\n        setRecords(undefined);\n        setDomain('');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoading(false);\n  };\n\n  const fetchMints = async () => {\n    try {\n      if (active) {\n        const signer = library.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer); // Get all the domain names from our contract\n\n        const names = await contract['getAllNames'](); // For each name, get the record and the address\n\n        const mintRecords = await Promise.all(names.map(async name => {\n          const mintRecord = await contract['getRecord'](name, 4);\n          const owner = await contract['getAddress'](name);\n          return {\n            id: names.indexOf(name) + 1,\n            name: name,\n            record: mintRecord,\n            owner: owner\n          };\n        }));\n        console.log('MINTS FETCHED ', mintRecords);\n        setMints(mintRecords);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const mintDomain = async () => {\n    // Don't run if the domain is empty\n    if (!domain) {\n      return;\n    } // Alert the user if the domain is too short\n\n\n    if (domain.length < 3) {\n      alert('Domain must be at least 3 characters long');\n      return;\n    } // Calculate price based on length of domain (change this to match your contract)\n    // 3 chars = 0.5 MATIC, 4 chars = 0.3 MATIC, 5 or more = 0.1 MATIC\n\n\n    const price = domain.length === 3 ? '0.5' : domain.length === 4 ? '0.3' : '0.1';\n    console.log('Minting domain', domain, 'with price', price);\n\n    try {\n      if (active) {\n        const signer = library.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n        console.log('Going to pop wallet now to pay gas...');\n        const tx = await contract['register'](domain, {\n          value: ethers.utils.parseEther(price)\n        }); // Wait for the transaction to be mined\n\n        const receipt = await tx.wait(); // Check if the transaction was successfully completed\n\n        if (receipt.status === 1) {\n          console.log('Domain minted! https://hscan.org/tx/' + tx.hash);\n          setTimeout(() => {\n            fetchMints();\n          }, 2000);\n          setRecords(undefined);\n          setDomain('');\n        } else {\n          alert('Transaction failed! Please try again');\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const searchDomain = async function () {\n    let _domain = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : domain;\n\n    if (!_domain) {\n      return;\n    }\n\n    if (_domain.length < 3 || _domain.length > 12) return;\n    const signer = library.getSigner();\n    const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n    contract['getId'](_domain).then(async () => {\n      const res = await contract['getRecords'](_domain);\n      const newRecords = {\n        avatar: res[0][RecordType.AVATAR],\n        twitterTag: res[0][RecordType.TWITTER],\n        description: res[0][RecordType.DESCRIPTION],\n        email: res[0][RecordType.EMAIL],\n        website: res[0][RecordType.WEBSITE],\n        address: res[1]\n      };\n      setRecords(newRecords);\n      console.log('NEW RECORDS SET');\n    }).catch(() => {\n      switch (_domain.length) {\n        case 3:\n          setMintPrice(0.5);\n          break;\n\n        case 4:\n          setMintPrice(0.3);\n          break;\n\n        default:\n          setMintPrice(0.1);\n          break;\n      }\n    });\n  };\n\n  const renderInputForm = () => {\n    //@ts-ignore\n    if (networks[chainId === null || chainId === void 0 ? void 0 : chainId.toString(16)] !== 'HPB Mainnet') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connect-wallet-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Please switch to HPB Mainnet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          onClick: switchNetwork,\n          children: \"Click here to switch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: domain,\n          placeholder: \"domain\",\n          onChange: e => {\n            setRecords(undefined);\n            setMintPrice(0);\n            setDomain(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tld\",\n          children: [\" \", tld, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), records && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"addr\",\n          className: \"record\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: records.address,\n            placeholder: \"whats ur ninja power\",\n            readOnly: true,\n            className: \"readonly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"desc\",\n          className: \"record\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: records.description,\n            placeholder: \"whats ur ninja power\",\n            onChange: e => setRecords({ ...records,\n              description: e.target.value\n            }),\n            readOnly: (account === null || account === void 0 ? void 0 : account.toLowerCase()) !== records.address.toLowerCase(),\n            className: (account === null || account === void 0 ? void 0 : account.toLowerCase()) !== records.address.toLowerCase() ? 'readonly' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"email\",\n          className: \"record\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: records.email,\n            placeholder: \"whats ur ninja power\",\n            onChange: e => setRecords({ ...records,\n              email: e.target.value\n            }),\n            readOnly: (account === null || account === void 0 ? void 0 : account.toLowerCase()) !== records.address.toLowerCase(),\n            className: (account === null || account === void 0 ? void 0 : account.toLowerCase()) !== records.address.toLowerCase() ? 'readonly' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"website\",\n          className: \"record\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: records.website,\n            placeholder: \"whats ur ninja power\",\n            onChange: e => setRecords({ ...records,\n              website: e.target.value\n            }),\n            readOnly: (account === null || account === void 0 ? void 0 : account.toLowerCase()) !== records.address.toLowerCase(),\n            className: (account === null || account === void 0 ? void 0 : account.toLowerCase()) !== records.address.toLowerCase() ? 'readonly' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"twitter\",\n          className: \"record\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: records.twitterTag,\n            placeholder: \"whats ur ninja power\",\n            onChange: e => setRecords({ ...records,\n              twitterTag: e.target.value\n            }),\n            readOnly: (account === null || account === void 0 ? void 0 : account.toLowerCase()) !== records.address.toLowerCase(),\n            className: (account === null || account === void 0 ? void 0 : account.toLowerCase()) !== records.address.toLowerCase() ? 'readonly' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"avatar\",\n          className: \"record\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: records.avatar,\n            placeholder: \"whats ur ninja power\",\n            onChange: e => setRecords({ ...records,\n              avatar: e.target.value\n            }),\n            readOnly: (account === null || account === void 0 ? void 0 : account.toLowerCase()) !== records.address.toLowerCase(),\n            className: (account === null || account === void 0 ? void 0 : account.toLowerCase()) !== records.address.toLowerCase() ? 'readonly' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          domain: domain,\n          url: records.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          disabled: loading,\n          onClick: () => {\n            searchDomain();\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), records ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          disabled: loading,\n          onClick: updateDomain,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this) : mintPrice > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          disabled: loading,\n          onClick: mintDomain,\n          children: [\"Mint for \", mintPrice, \" $MATIC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: \"\\uD83D\\uDCB0\\uD83D\\uDD58 HPB Name Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle\",\n              children: \"Mint your High Performance Blockchain (HPB) domain name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ConnectionStatus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), active ? renderInputForm() : /*#__PURE__*/_jsxDEV(ConnectButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(RecentlyMinted, {\n        mints: mints,\n        onEdit: name => {\n          setDomain(name);\n          searchDomain(name);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: \"https://smmile.com\",\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: \"therealbryanho x sabrinamok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"QzQJfxKTU3x2eL4L/Z1PDjgbI4s=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Bryan/Documents/Development/dns-polygon/front/src/App.tsx"],"names":["React","useState","useEffect","ethers","contractABI","networks","useWeb3React","RecentlyMinted","ConnectionStatus","ConnectButton","Avatar","tld","CONTRACT_ADDRESS","RecordType","App","activate","active","account","library","chainId","domain","setDomain","mintPrice","setMintPrice","records","setRecords","undefined","loading","setLoading","mints","setMints","toString","fetchMints","switchNetwork","send","error","code","chainName","rpcUrls","nativeCurrency","name","symbol","decimals","blockExplorerUrls","console","log","updateDomain","signer","getSigner","contract","Contract","abi","tx","avatar","twitterTag","website","email","description","wait","hash","names","mintRecords","Promise","all","map","mintRecord","owner","id","indexOf","record","mintDomain","length","alert","price","value","utils","parseEther","receipt","status","setTimeout","searchDomain","_domain","then","res","newRecords","AVATAR","TWITTER","DESCRIPTION","EMAIL","WEBSITE","address","catch","renderInputForm","e","target","toLowerCase"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport React, { useState, useEffect } from 'react';\nimport './app.css';\nimport { ethers } from 'ethers';\nimport contractABI from './utils/contractABI.json';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport { networks } from './utils/networks';\n\nimport { useWeb3React } from '@web3-react/core';\n\nimport RecentlyMinted from './components/RecentlyMinted';\nimport ConnectionStatus from './components/ConnectionStatus';\nimport ConnectButton from './components/ConnectButton';\nimport Avatar from './components/Avatar';\n\nconst tld = '.hpb';\n\n// Constants\nconst CONTRACT_ADDRESS = '0x4f088e4aeb62ec260254850be255859d839f77db';\n\nexport type Record = {\n  avatar: string;\n  twitterTag: string;\n  website: string;\n  email: string;\n  description: string;\n  address: string;\n};\n\nexport enum RecordType {\n  AVATAR = 0,\n  TWITTER = 1,\n  WEBSITE = 2,\n  EMAIL = 3,\n  DESCRIPTION = 4\n}\n\nconst App = () => {\n  const { activate, active, account, library, chainId } = useWeb3React();\n  const [domain, setDomain] = useState('');\n  const [mintPrice, setMintPrice] = useState(0);\n\n  const [records, setRecords] = useState<Record | undefined>(undefined);\n\n  const [loading, setLoading] = useState(false);\n  const [mints, setMints] = useState<Array<any>>([]);\n\n  useEffect(() => {\n    //@ts-ignore\n    if (networks[chainId?.toString(16)] === 'HPB Mainnet') {\n      fetchMints();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, chainId]);\n\n  const switchNetwork = async () => {\n    if (account) {\n      try {\n        // Try to switch to the Mumbai testnet\n        await library.send(\n          'wallet_switchEthereumChain',\n          [{ chainId: '0x13881' }] // Check networks.js for hexadecimal network ids\n        );\n      } catch (error: any) {\n        // This error code means that the chain we want has not been added to MetaMask\n        // In this case we ask the user to add it to their MetaMask\n        if (error.code === 4902) {\n          try {\n            await library.send('wallet_addEthereumChain', [\n              {\n                chainId: '0x13881',\n                chainName: 'HPB Mainnet',\n                rpcUrls: ['https://hpbnode.com/'],\n                nativeCurrency: {\n                  name: 'HPB Mainnet',\n                  symbol: 'HPB',\n                  decimals: 18\n                },\n                blockExplorerUrls: ['https://hscan.org/']\n              }\n            ]);\n          } catch (error) {\n            console.log(error);\n          }\n        }\n        console.log(error);\n      }\n    }\n  };\n\n  const updateDomain = async () => {\n    if (!records || !domain) {\n      return;\n    }\n    setLoading(true);\n    try {\n      if (active) {\n        const signer = library.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n\n        const tx = await contract['setRecords'](\n          domain,\n          records.avatar,\n          records.twitterTag,\n          records.website,\n          records.email,\n          records.description\n        );\n        await tx.wait();\n        console.log('Record set https://hscan.org/tx/' + tx.hash);\n\n        fetchMints();\n        setRecords(undefined);\n        setDomain('');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  const fetchMints = async () => {\n    try {\n      if (active) {\n        const signer = library.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n\n        // Get all the domain names from our contract\n        const names = await contract['getAllNames']();\n\n        // For each name, get the record and the address\n        const mintRecords = await Promise.all(\n          names.map(async (name: string) => {\n            const mintRecord = await contract['getRecord'](name, 4);\n            const owner = await contract['getAddress'](name);\n            return {\n              id: names.indexOf(name) + 1,\n              name: name,\n              record: mintRecord,\n              owner: owner\n            };\n          })\n        );\n\n        console.log('MINTS FETCHED ', mintRecords);\n        setMints(mintRecords);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const mintDomain = async () => {\n    // Don't run if the domain is empty\n    if (!domain) {\n      return;\n    }\n\n    // Alert the user if the domain is too short\n    if (domain.length < 3) {\n      alert('Domain must be at least 3 characters long');\n      return;\n    }\n    // Calculate price based on length of domain (change this to match your contract)\n    // 3 chars = 0.5 MATIC, 4 chars = 0.3 MATIC, 5 or more = 0.1 MATIC\n    const price = domain.length === 3 ? '0.5' : domain.length === 4 ? '0.3' : '0.1';\n    console.log('Minting domain', domain, 'with price', price);\n    try {\n      if (active) {\n        const signer = library.getSigner();\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n\n        console.log('Going to pop wallet now to pay gas...');\n        const tx = await contract['register'](domain, {\n          value: ethers.utils.parseEther(price)\n        });\n        // Wait for the transaction to be mined\n        const receipt = await tx.wait();\n\n        // Check if the transaction was successfully completed\n        if (receipt.status === 1) {\n          console.log('Domain minted! https://hscan.org/tx/' + tx.hash);\n\n          setTimeout(() => {\n            fetchMints();\n          }, 2000);\n\n          setRecords(undefined);\n          setDomain('');\n        } else {\n          alert('Transaction failed! Please try again');\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const searchDomain = async (_domain = domain) => {\n    if (!_domain) {\n      return;\n    }\n\n    if (_domain.length < 3 || _domain.length > 12) return;\n\n    const signer = library.getSigner();\n    const contract = new ethers.Contract(CONTRACT_ADDRESS, contractABI.abi, signer);\n\n    contract['getId'](_domain)\n      .then(async () => {\n        const res = await contract['getRecords'](_domain);\n        const newRecords: Record = {\n          avatar: res[0][RecordType.AVATAR],\n          twitterTag: res[0][RecordType.TWITTER],\n          description: res[0][RecordType.DESCRIPTION],\n          email: res[0][RecordType.EMAIL],\n          website: res[0][RecordType.WEBSITE],\n          address: res[1]\n        };\n\n        setRecords(newRecords);\n        console.log('NEW RECORDS SET');\n      })\n      .catch(() => {\n        switch (_domain.length) {\n          case 3:\n            setMintPrice(0.5);\n            break;\n          case 4:\n            setMintPrice(0.3);\n            break;\n          default:\n            setMintPrice(0.1);\n            break;\n        }\n      });\n  };\n\n  const renderInputForm = () => {\n    //@ts-ignore\n    if (networks[chainId?.toString(16)] !== 'HPB Mainnet') {\n      return (\n        <div className=\"connect-wallet-container\">\n          <h2>Please switch to HPB Mainnet</h2>\n          {/* This button will call our switch network function */}\n          <button className=\"cta-button mint-button\" onClick={switchNetwork}>\n            Click here to switch\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"form-container\">\n        <div className=\"first-row\">\n          <input\n            type=\"text\"\n            value={domain}\n            placeholder=\"domain\"\n            onChange={e => {\n              setRecords(undefined);\n              setMintPrice(0);\n              setDomain(e.target.value);\n            }}\n          />\n          <p className=\"tld\"> {tld} </p>\n        </div>\n\n        {records && (\n          <>\n            <span id=\"addr\" className=\"record\">\n              <input\n                type=\"text\"\n                value={records.address}\n                placeholder=\"whats ur ninja power\"\n                readOnly={true}\n                className=\"readonly\"\n              />\n            </span>\n            <span id=\"desc\" className=\"record\">\n              <input\n                type=\"text\"\n                value={records.description}\n                placeholder=\"whats ur ninja power\"\n                onChange={e => setRecords({ ...records, description: e.target.value })}\n                readOnly={account?.toLowerCase() !== records.address.toLowerCase()}\n                className={account?.toLowerCase() !== records.address.toLowerCase() ? 'readonly' : ''}\n              />\n            </span>\n            <span id=\"email\" className=\"record\">\n              <input\n                type=\"text\"\n                value={records.email}\n                placeholder=\"whats ur ninja power\"\n                onChange={e => setRecords({ ...records, email: e.target.value })}\n                readOnly={account?.toLowerCase() !== records.address.toLowerCase()}\n                className={account?.toLowerCase() !== records.address.toLowerCase() ? 'readonly' : ''}\n              />\n            </span>\n            <span id=\"website\" className=\"record\">\n              <input\n                type=\"text\"\n                value={records.website}\n                placeholder=\"whats ur ninja power\"\n                onChange={e => setRecords({ ...records, website: e.target.value })}\n                readOnly={account?.toLowerCase() !== records.address.toLowerCase()}\n                className={account?.toLowerCase() !== records.address.toLowerCase() ? 'readonly' : ''}\n              />\n            </span>\n            <span id=\"twitter\" className=\"record\">\n              <input\n                type=\"text\"\n                value={records.twitterTag}\n                placeholder=\"whats ur ninja power\"\n                onChange={e => setRecords({ ...records, twitterTag: e.target.value })}\n                readOnly={account?.toLowerCase() !== records.address.toLowerCase()}\n                className={account?.toLowerCase() !== records.address.toLowerCase() ? 'readonly' : ''}\n              />\n            </span>\n            <span id=\"avatar\" className=\"record\">\n              <input\n                type=\"text\"\n                value={records.avatar}\n                placeholder=\"whats ur ninja power\"\n                onChange={e => setRecords({ ...records, avatar: e.target.value })}\n                readOnly={account?.toLowerCase() !== records.address.toLowerCase()}\n                className={account?.toLowerCase() !== records.address.toLowerCase() ? 'readonly' : ''}\n              />\n            </span>\n            <Avatar domain={domain} url={records.avatar} />\n          </>\n        )}\n        <div className=\"button-container\">\n          <button\n            className=\"cta-button mint-button\"\n            disabled={loading}\n            onClick={() => {\n              searchDomain();\n            }}\n          >\n            Search\n          </button>\n          {records ? (\n            <button className=\"cta-button mint-button\" disabled={loading} onClick={updateDomain}>\n              Update\n            </button>\n          ) : mintPrice > 0 ? (\n            <button className=\"cta-button mint-button\" disabled={loading} onClick={mintDomain}>\n              Mint for {mintPrice} $MATIC\n            </button>\n          ) : null}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <header>\n            <div className=\"left\">\n              <p className=\"title\">💰🕘 HPB Name Service</p>\n              <p className=\"subtitle\">Mint your High Performance Blockchain (HPB) domain name</p>\n            </div>\n            <ConnectionStatus />\n          </header>\n        </div>\n\n        {active ? renderInputForm() : <ConnectButton />}\n        {/*mints && renderMints()*/}\n        <RecentlyMinted\n          mints={mints}\n          onEdit={(name: string) => {\n            setDomain(name);\n            searchDomain(name);\n          }}\n        />\n\n        <div className=\"footer-container\">\n          <a\n            className=\"footer-text\"\n            href=\"https://smmile.com\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >therealbryanho x sabrinamok</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}